- name: SteamCmd
  hosts: all
  vars_files:
    - vars/main.yml
    # The custom.yml file is not included in the repository, you have to create it yourself
    - vars/custom.yml
  tasks:
    - name: Install apt packages
      ansible.builtin.apt:
        name: "{{ steamcmd_packages }}"
        state: present
        update_cache: true
        cache_valid_time: 3600
      become: true

    - name: Create steam user
      ansible.builtin.user:
        name: "{{ steamcmd_user }}"
        shell: /bin/bash
        home: "{{ steamcmd_user_home }}"
        createhome: true
        state: present

    - name: Create directory for steamcmd
      ansible.builtin.file:
        path: "{{ steamcmd_directory }}"
        state: directory
        recurse: true
      become: true
      become_user: "{{ steamcmd_user }}"

    - name: Check if steam exists
      ansible.builtin.stat:
        path: "{{ steamcmd_directory }}/steamcmd.sh"
      register: steamcmd_exists
      become: true
      become_user: "{{ steamcmd_user }}"

    - name: Download steamcmd for Link
      ansible.builtin.get_url:
        url: https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
        dest: "{{ steamcmd_directory }}/steamcmd.tar.gz"
        mode: "0755"
      when: not steamcmd_exists.stat.exists
      become: true
      become_user: "{{ steamcmd_user }}"

    - name: Extract steamcmd
      ansible.builtin.unarchive:
        src: "{{ steamcmd_directory }}/steamcmd.tar.gz"
        dest: "{{ steamcmd_directory }}"
        copy: false
      when: not steamcmd_exists.stat.exists
      become: true
      become_user: "{{ steamcmd_user }}"

    - name: Template script.steamcmd to host
      ansible.builtin.template:
        src: templates/script.steamcmd.j2
        dest: "{{ steamcmd_directory }}/script.steamcmd"
        mode: "0755"
      become: true
      become_user: "{{ steamcmd_user }}"

    # This script is idempotent itself, so we don't need to check for changes
    - name: Run script.steamcmd
      ansible.builtin.command:
        cmd: "{{ steamcmd_directory }}/steamcmd.sh +runscript {{ steamcmd_directory }}/script.steamcmd"
      changed_when: false
      become: true
      become_user: "{{ steamcmd_user }}"

    - name: Create Server Directory
      ansible.builtin.file:
        path: "{{ steamcmd_directory }}/{{ game_name }}/Servers/{{ server_name }}"
        state: directory
        recurse: true
      become: true
      become_user: "{{ steamcmd_user }}"

    - name: Create Server Config Directory
      ansible.builtin.file:
        path: "{{ steamcmd_directory }}/{{ game_name }}/Servers/{{ server_name }}/Server"
        state: directory
        recurse: true
      become: true
      become_user: "{{ steamcmd_user }}"

    - name: Copy Commands.dat configuration
      ansible.builtin.template:
        src: "templates/Commands.dat.j2"
        dest: "{{ steamcmd_directory }}/{{ game_name }}/Servers/{{ server_name }}/Server/Commands.dat"
        mode: "0644"
      become: true
      become_user: "{{ steamcmd_user }}"

    - name: Copy systemd service file
      ansible.builtin.template:
        src: "templates/steamcmd.service.j2"
        dest: /etc/systemd/system/steamcmd.service
        mode: "0644"
      notify:
        - Restart steamcmd service

  handlers:
    - name: Restart steamcmd service
      ansible.builtin.service:
        daemon_reload: true
        name: steamcmd
        state: restarted
